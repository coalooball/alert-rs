use serde::{Deserialize, Serialize};
use serde_json::Value;

/// 主机行为告警
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct HostBehaviorAlert {
    pub alarm_id: Option<String>,
    pub alarm_date: Option<i64>,
    pub alarm_severity: Option<u8>,
    pub alarm_name: Option<String>,
    pub alarm_description: Option<String>,
    pub alarm_type: u8,
    pub alarm_subtype: u16,
    pub source: u8,
    pub control_rule_id: Option<String>,
    pub control_task_id: Option<String>,
    pub procedure_technique_id: Option<Vec<String>>,
    pub session_id: Option<String>,
    pub ip_version: Option<u8>,
    pub src_ip: Option<String>,
    pub src_port: Option<u16>,
    pub dst_ip: Option<String>,
    pub dst_port: Option<u16>,
    pub protocol: Option<String>,
    pub terminal_id: Option<String>,
    pub source_file_path: Option<String>,
    pub host_name: Option<String>,
    pub terminal_ip: Option<String>,
    pub user_account: Option<String>,
    pub terminal_os: Option<String>,
    pub dst_process_md5: Option<String>,
    pub dst_process_path: Option<String>,
    pub dst_process_cli: Option<String>,
    pub src_process_md5: Option<String>,
    pub src_process_path: Option<String>,
    pub src_process_cli: Option<String>,
    pub register_key_name: Option<String>,
    pub register_key_value: Option<String>,
    pub register_path: Option<String>,
    pub file_name: Option<String>,
    pub file_md5: Option<String>,
    pub file_path: Option<String>,
    pub data: Option<Value>,
}
